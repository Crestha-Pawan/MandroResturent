@model FiboInventory.Src.ViewModel.ItemViewModel
@{ Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Index"; }
@inject FiboOffice.InfraStructure.Repository.IMeasuringUnitRepository _muRepo;
<div class="col-sm-12">
    <div class="card">
        <div class="card-body">
            <button class="btn btn-success" data-toggle="modal" InvItemId="0" data-target="#myModal"><i class="ti-plus"></i> Create New</button>
            <hr />
            <div class="table-responsive">
                <div class="tableFixHead">
                    <table class="table table-bordered">
                        <thead style="background-color: #FFFFFFCC;">
                            <tr>
                                <th>
                                    Name
                                </th>
                                <th>
                                    Unit
                                </th>
                                <th style="text-align:center">
                                    Action Name
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Items)
                            {

                <tr>
                    <td>
                        @item.Name
                    </td>
                    <td>
                        @if (item.MeasuringUnitId > 0)
                        {
                            var unit = await _muRepo.GetByIdAsync((long)item.MeasuringUnitId);
        @unit.Name}
                    </td>
                    <td style="text-align:center">
                        <div class="btn-group-sm">
                            <button class="btn btn-secondary" ReferenceType="Crud" href="#!" data-toggle="modal" InvItemId="@item.Id" data-target="#myModal"><i class="ti-pencil-alt" data-toggle="tooltip" title="Edit"></i></button>

                            <button class="btn btn-danger" href="#!" data-toggle="modal" InvItemId="@item.Id" data-target="#myModal"><i class="ti-trash" data-toggle="tooltip" title="Delete"></i></button>
                        </div>

                    </td>
                </tr>}
                        </tbody>
                    </table>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="modal" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md" id="DeleteBody">

        <!-- /.modal-content -->
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
@section Scripts
    {
    <script>
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
    <script type="text/javascript">
        $("#myModal").on('show.bs.modal', function (ke) {
            const invItemId = $(ke.relatedTarget).attr('InvItemId');
            const type = $(ke.relatedTarget).attr('ReferenceType');
            if (invItemId > 0) {
                if (type == null) {
                    var url = '@Url.Action("Delete","Item")' + "?id=" + invItemId;
                    $("#DeleteBody").load(url, function () {
                        $("#myModal").modal('show');
                    });
                }
                else {
                    var url = '@Url.Action("Update","Item")' + "?id=" + invItemId;
                    $("#DeleteBody").load(url, function () {
                        $("#myModal").modal('show');
                    });
                }
            }
            else {
                var url = '@Url.Action("Create","Item")';
                $("#DeleteBody").load(url, function () {
                    $("#myModal").modal('show');
                });
            }
        })

    </script>

    @if (ViewBag.Message != null)
    {
<script type="text/javascript">
    'use strict';
    $(window).on('load', function () {
        function notify(message) {
            $.notify({
                message: message,
                type: 'inverse',
                allow_dismiss: false,
                label: 'Cancel',
                className: 'btn-xs btn-inverse',
                placement: { from: 'bottom', align: 'right' },
                delay: 2500,
                animate: { enter: 'animated fadeInRight', exit: 'animated fadeOutRight' },
                offset: { x: 30, y: 30 }
            });
        };
        /**/
        notify('@ViewBag.Message', 'success');
    /**/
    });
</script>}
}